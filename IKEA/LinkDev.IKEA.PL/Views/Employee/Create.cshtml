@model CreatedEmployeeDto
@{
    ViewData["Title"] = "Create";
    var Departments = new SelectList(ViewData["Departments"] as IEnumerable<DepartmentDto>, nameof(DepartmentDto.Id),nameof(DepartmentDto.Name));
}

<h1>Create New Employee</h1>
<form asp-action="Create" method="post" class="row justify-content-center align-items-center" onsubmit="return validateForm()">
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Name">Name</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Email">Email</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Address">Address</label>
        <input asp-for="Address" class="form-control" id="address" />
        <span asp-validation-for="Address" class="text-danger" id="addressError"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="HiringDate">Hiring Date</label>
        <input type="date" asp-for="HiringDate" class="form-control" />
        <span asp-validation-for="HiringDate" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Age">Age</label>
        <input asp-for="Age" class="form-control" />
        <span asp-validation-for="Age" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Salary">Salary</label>
        <input asp-for="Salary" class="form-control" />
        <span asp-validation-for="Salary" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="PhoneNumber">Phone Number</label>
        <input asp-for="PhoneNumber" class="form-control" />
        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Gender">Gender</label>
        <select asp-for="Gender" class="form-select">
            <option value="">Select Gender</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Other">Other</option>
        </select>
        <span asp-validation-for="Gender" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="DepartmentId">Department Name</label>
        <select asp-for="DepartmentId" asp-items="@Departments" class="form-select">
            <option value="@null">Select Department</option>
        </select>
    </div>

    <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="EmployeeType">Employee Type</label>
        <select asp-for="EmployeeType" class="form-select">
            <option value="">Select Employee Type</option>
            <option value="FullTime">Full-Time</option>
            <option value="PartTime">Part-Time</option>
            <option value="Contract">Contract</option>
        </select>
        <span asp-validation-for="EmployeeType" class="text-danger"></span>
    </div>

    <div class="col-md-6 mb-3 form-check">
        <input asp-for="IsActive" class="form-check-input" />
        <label class="form-check-label" asp-for="IsActive">Is Active</label>
        <span asp-validation-for="IsActive" class="text-danger"></span>
    </div>

    <div class="col-md-6 mt-3">
        <input type="submit" value="Create" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Back To List</a>
    </div>
</form>

<script>
    function validateForm() {
        var address = document.getElementById("address").value;
        var addressError = document.getElementById("addressError");
        var regex = /^\d{1,5}-[a-zA-Z\s]{2,20}-[a-zA-Z\s]{2,20}-[a-zA-Z\s]{2,20}$/;

        if (!regex.test(address)) {
            addressError.textContent = "Address must be in the format: 123-Street-City-Country";
            return false;
        } else {
            addressError.textContent = "";
        }
        return true;
    }
</script>
@section ValidationScript {
    <partial name="_ValidationScriptsPartial" />
}